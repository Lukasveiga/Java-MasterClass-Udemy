Here, the quickSortDescending method takes an array arr, a starting index low, and an ending index high.
It first checks if the low index is less than the high index, and if so, partitions the array around a
pivot element using the partitionDescending method. The quickSortDescending method then recursively calls
itself on the sub-arrays to the left and right of the pivot until the entire array is sorted.

The partitionDescending method takes an array arr, a starting index low, and an ending index high. It selects
the last element of the array (i.e., arr[high]) as the pivot element, and then loops through the sub-array from
low to high-1. If an element is greater than or equal to the pivot, it swaps it with the element at the current
position i and increments i. Finally, it swaps the pivot with the element at position i+1 and returns i+1 as the
index of the pivot. This ensures that all elements to the left of the pivot are greater than the pivot, and all
elements to the right are less than or equal to the pivot, which is exactly what we need for descending order.

Generated by ChatGPT